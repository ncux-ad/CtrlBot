#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import asyncpg
from config import config

async def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"""
    try:
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
        print(f"   Host: {config.DB_HOST}")
        print(f"   Port: {config.DB_PORT}")
        print(f"   User: {config.DB_USER}")
        print(f"   Database: {config.DB_NAME}")
        print(f"   Password: {'*' * len(config.DB_PASSWORD)}")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        conn = await asyncpg.connect(
            host=config.DB_HOST,
            port=config.DB_PORT,
            user=config.DB_USER,
            password=config.DB_PASSWORD,
            database=config.DB_NAME
        )
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å
        result = await conn.fetchval("SELECT 1")
        print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É posts
        result = await conn.fetchval("SELECT COUNT(*) FROM posts")
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ posts: {result} –∑–∞–ø–∏—Å–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–µ entities
        result = await conn.fetchval("SELECT column_name FROM information_schema.columns WHERE table_name = 'posts' AND column_name = 'entities'")
        if result:
            print("‚úÖ –ü–æ–ª–µ entities –Ω–∞–π–¥–µ–Ω–æ!")
        else:
            print("‚ùå –ü–æ–ª–µ entities –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        
        await conn.close()
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö CtrlBot")
    print("=" * 50)
    
    success = asyncio.run(test_connection())
    
    if success:
        print("\nüéâ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î!")
