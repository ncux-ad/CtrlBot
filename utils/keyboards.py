# Utils: keyboards

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from typing import List

def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±–æ—Ç–∞"""
    keyboard = [
        [KeyboardButton(text="üìù –ù–æ–≤—ã–π –ø–æ—Å—Ç"), KeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã")],
        [KeyboardButton(text="ü§ñ AI –ø–æ–º–æ—â–Ω–∏–∫"), KeyboardButton(text="‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")],
        [KeyboardButton(text="üè∑Ô∏è –¢–µ–≥–∏"), KeyboardButton(text="üìä –°–µ—Ä–∏–∏")],
        [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"), KeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_post_actions_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ—Å—Ç–æ–º"""
    keyboard = [
        [InlineKeyboardButton(text="‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_post")],
        [InlineKeyboardButton(text="üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="schedule_post")],
        [InlineKeyboardButton(text="‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", callback_data="post_advanced")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_post")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_post_advanced_keyboard() -> InlineKeyboardMarkup:
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ—Å—Ç–æ–º"""
    keyboard = [
        [InlineKeyboardButton(text="üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="preview_post")],
        [InlineKeyboardButton(text="üìù –ü—Ä–∏–º–µ—Ä Markdown", callback_data="markdown_example")],
        [InlineKeyboardButton(text="üè∑Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥–∏", callback_data="add_tags")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –ø–æ—Å—Ç—É", callback_data="back_to_post")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_tags_keyboard(tags: List[dict], selected_tags: List[int] = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–≥–æ–≤"""
    if selected_tags is None:
        selected_tags = []
    
    keyboard = []
    for tag in tags:
        tag_id = tag['id']
        tag_name = tag['name']
        is_selected = tag_id in selected_tags
        emoji = "‚úÖ" if is_selected else "‚ö™"
        keyboard.append([InlineKeyboardButton(
            text=f"{emoji} {tag_name}", 
            callback_data=f"toggle_tag_{tag_id}"
        )])
    
    keyboard.append([InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="tags_done")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_series_keyboard(series: List[dict]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–∏–∏"""
    keyboard = []
    for s in series:
        keyboard.append([InlineKeyboardButton(
            text=f"üìö {s['title']} (#{s['next_number']})", 
            callback_data=f"select_series_{s['id']}"
        )])
    
    keyboard.append([InlineKeyboardButton(text="‚ûï –ù–æ–≤–∞—è —Å–µ—Ä–∏—è", callback_data="create_series")])
    keyboard.append([InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_series")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_schedule_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    keyboard = [
        [InlineKeyboardButton(text="üöÄ –°–µ–π—á–∞—Å", callback_data="schedule_now")],
        [InlineKeyboardButton(text="‚è∞ –ß–µ—Ä–µ–∑ —á–∞—Å", callback_data="schedule_hour")],
        [InlineKeyboardButton(text="üìÖ –ó–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º", callback_data="schedule_tomorrow_morning")],
        [InlineKeyboardButton(text="üìÖ –ó–∞–≤—Ç—Ä–∞ –≤–µ—á–µ—Ä–æ–º", callback_data="schedule_tomorrow_evening")],
        [InlineKeyboardButton(text="üìù –£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è", callback_data="schedule_custom")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_schedule")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_admin_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    keyboard = [
        [InlineKeyboardButton(text="üì¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞", callback_data="channel_settings")],
        [InlineKeyboardButton(text="üè∑Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏", callback_data="manage_tags")],
        [InlineKeyboardButton(text="üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏", callback_data="manage_series")],
        [InlineKeyboardButton(text="‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="manage_reminders")],
        [InlineKeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç", callback_data="export_data")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_confirmation_keyboard(action: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    keyboard = [
        [InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
