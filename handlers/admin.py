"""
@file: handlers/admin.py
@description: –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
@dependencies: services/tags.py, utils/keyboards.py, utils/filters.py
@created: 2025-09-13
"""

import os
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from utils.filters import IsConfigAdminFilter
from utils.logging import get_logger
from config import config

logger = get_logger(__name__)
router = Router()

# –§–∏–ª—å—Ç—Ä—ã
admin_filter = IsConfigAdminFilter()

async def safe_callback_answer(callback: CallbackQuery, text: str = None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ callback —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        await callback.answer(text=text)
    except TelegramBadRequest as e:
        if "query is too old" in str(e) or "response timeout expired" in str(e):
            logger.warning("Callback query expired, ignoring: %s", e)
        else:
            logger.warning("Failed to answer callback: %s", e)
    except Exception as e:
        logger.warning("Unexpected error answering callback: %s", e)

@router.message(Command("start"), admin_filter)
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    logger.info("Start command received from admin %s", message.from_user.id)
    await message.answer(
        "üëë <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å CtrlBot</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="create_post")],
            [InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã", callback_data="view_posts")],
            [InlineKeyboardButton(text="ü§ñ AI –ø–æ–º–æ—â–Ω–∏–∫", callback_data="ai_functions")],
            [InlineKeyboardButton(text="üè∑Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏", callback_data="manage_tags")],
            [InlineKeyboardButton(text="üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏", callback_data="manage_series")],
            [InlineKeyboardButton(text="‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="manage_reminders")],
            [InlineKeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="export_data")],
            [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞", callback_data="channel_settings")],
            [InlineKeyboardButton(text="üîó –ü–æ–ª—É—á–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞", callback_data="get_channel_id")]
        ])
    )

@router.message(Command("admin"), admin_filter)
async def cmd_admin(message: Message):
    """–ì–ª–∞–≤–Ω–∞—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"""
    await message.answer(
        "üëë <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å CtrlBot</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ])
    )

@router.message(Command("ping"))
async def cmd_ping(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ping"""
    await message.answer("üèì Pong! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
@router.message(F.text == "üìù –ù–æ–≤—ã–π –ø–æ—Å—Ç", admin_filter)
async def btn_new_post(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–æ–≤—ã–π –ø–æ—Å—Ç' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="create_post")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "ü§ñ AI –ø–æ–º–æ—â–Ω–∏–∫")
async def btn_ai_helper(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'AI –ø–æ–º–æ—â–Ω–∏–∫' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "ü§ñ <b>AI –ø–æ–º–æ—â–Ω–∏–∫</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="ü§ñ AI —Ñ—É–Ω–∫—Ü–∏–∏", callback_data="ai_functions")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "üè∑Ô∏è –¢–µ–≥–∏")
async def btn_tags(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–¢–µ–≥–∏' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "üè∑Ô∏è <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üè∑Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏", callback_data="manage_tags")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def btn_settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞", callback_data="channel_settings")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "üìã –ú–æ–∏ –ø–æ—Å—Ç—ã")
async def btn_my_posts(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ–∏ –ø–æ—Å—Ç—ã' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "üìã <b>–ú–æ–∏ –ø–æ—Å—Ç—ã</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–æ–≤", callback_data="view_posts")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
async def btn_reminders(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "‚è∞ <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚è∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏", callback_data="manage_reminders")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "üìä –°–µ—Ä–∏–∏")
async def btn_series(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°–µ—Ä–∏–∏' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "üìä <b>–°–µ—Ä–∏–∏</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏", callback_data="manage_series")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(F.text == "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def btn_statistics(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ inline –º–µ–Ω—é"""
    await message.answer(
        "üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="export_data")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ])
    )

@router.message(Command("config"), admin_filter)
async def cmd_config(message: Message):
    """–ü–æ–∫–∞–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_info = f"""
‚öôÔ∏è <b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CtrlBot</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: {config.LOG_LEVEL}
‚Ä¢ –ú–∞–∫—Å. –¥–ª–∏–Ω–∞ –ø–æ—Å—Ç–∞: {config.MAX_POST_LENGTH}
‚Ä¢ –ú–∏–Ω. —Ç–µ–≥–æ–≤: {config.MIN_TAGS_REQUIRED}
‚Ä¢ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {config.TIMEZONE}

<b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:</b>
‚Ä¢ –•–æ—Å—Ç: {config.DB_HOST}:{config.DB_PORT}
‚Ä¢ –ë–∞–∑–∞: {config.DB_NAME}
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {config.DB_USER}

<b>AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:</b>
‚Ä¢ YandexGPT: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ' if config.YANDEX_API_KEY else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'}
‚Ä¢ –ü–∞–ø–∫–∞: {config.YANDEX_FOLDER_ID or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}

<b>–ö–∞–Ω–∞–ª—ã:</b>
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(config.CHANNEL_IDS) if hasattr(config, 'CHANNEL_IDS') else 0}
‚Ä¢ ID –∫–∞–Ω–∞–ª–æ–≤: {config.CHANNEL_IDS if hasattr(config, 'CHANNEL_IDS') else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'}

<b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:</b>
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(config.ADMIN_IDS)}
‚Ä¢ –í–∞—à ID: {message.from_user.id if message.from_user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
    """
    
    await message.answer(config_info)

@router.message(F.forward_from_chat, admin_filter)
async def handle_forwarded_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∫–∞–Ω–∞–ª–∞"""
    if message.forward_from_chat and message.forward_from_chat.type in ['channel', 'supergroup']:
        channel_id = message.forward_from_chat.id
        channel_title = message.forward_from_chat.title or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª"
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
            bot_member = await message.bot.get_chat_member(channel_id, message.bot.id)
            
            if bot_member.status in ['administrator', 'creator']:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
                can_post = bot_member.can_post_messages if hasattr(bot_member, 'can_post_messages') else True
                
                if can_post:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–Ω–∞–ª–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                    if not hasattr(config, 'CHANNEL_IDS'):
                        config.CHANNEL_IDS = []
                    
                    if channel_id not in config.CHANNEL_IDS:
                        config.CHANNEL_IDS.append(channel_id)
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ .env —Ñ–∞–π–ª
                        await save_channel_id_to_env(channel_id)
                        
                        await message.answer(
                            f"‚úÖ <b>–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!</b>\n\n"
                            f"üì¢ <b>–ö–∞–Ω–∞–ª:</b> {channel_title}\n"
                            f"üÜî <b>ID:</b> <code>{channel_id}</code>\n"
                            f"ü§ñ <b>–ü—Ä–∞–≤–∞ –±–æ—Ç–∞:</b> ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n"
                            f"üìù <b>–ü—É–±–ª–∏–∫–∞—Ü–∏—è:</b> ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∞\n\n"
                            f"–¢–µ–ø–µ—Ä—å –±–æ—Ç –º–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!",
                            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                            ])
                        )
                    else:
                        await message.answer(
                            f"‚ÑπÔ∏è <b>–ö–∞–Ω–∞–ª —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</b>\n\n"
                            f"üì¢ <b>–ö–∞–Ω–∞–ª:</b> {channel_title}\n"
                            f"üÜî <b>ID:</b> <code>{channel_id}</code>\n\n"
                            f"–ö–∞–Ω–∞–ª —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.",
                            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                            ])
                        )
                else:
                    await message.answer(
                        f"‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</b>\n\n"
                        f"üì¢ <b>–ö–∞–Ω–∞–ª:</b> {channel_title}\n"
                        f"üÜî <b>ID:</b> <code>{channel_id}</code>\n\n"
                        f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
                        f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–Ω–∞–ª–∞.",
                        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                        ])
                    )
            else:
                await message.answer(
                    f"‚ùå <b>–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>\n\n"
                    f"üì¢ <b>–ö–∞–Ω–∞–ª:</b> {channel_title}\n"
                    f"üÜî <b>ID:</b> <code>{channel_id}</code>\n\n"
                    f"–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é.",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                    ])
                )
                
        except Exception as e:
            logger.error("Error checking channel permissions: %s", e)
            await message.answer(
                f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–∞</b>\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ.\n"
                f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                ])
            )

async def save_channel_id_to_env(channel_id: int):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –∫–∞–Ω–∞–ª–∞ –≤ .env —Ñ–∞–π–ª"""
    try:
        env_file = ".env"
        
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª
        env_content = ""
        if os.path.exists(env_file):
            with open(env_file, 'r', encoding='utf-8') as f:
                env_content = f.read()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º CHANNEL_IDS
        if "CHANNEL_IDS=" in env_content:
            # –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
            import re
            pattern = r"CHANNEL_IDS=.*"
            replacement = f"CHANNEL_IDS={channel_id}"
            env_content = re.sub(pattern, replacement, env_content)
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            env_content += f"\nCHANNEL_IDS={channel_id}\n"
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª
        with open(env_file, 'w', encoding='utf-8') as f:
            f.write(env_content)
            
        logger.info("Channel ID %s saved to .env file", channel_id)
        
    except Exception as e:
        logger.error("Failed to save channel ID to .env: %s", e)

@router.callback_query(F.data == "channel_settings", admin_filter)
async def callback_channel_settings(callback: CallbackQuery):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üì¢ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in channel_settings: %s", e)
    await callback.answer()

@router.callback_query(F.data == "manage_tags", admin_filter)
async def callback_manage_tags(callback: CallbackQuery):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üè∑Ô∏è <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in manage_tags: %s", e)
    await callback.answer()

@router.callback_query(F.data == "manage_series", admin_filter)
async def callback_manage_series(callback: CallbackQuery):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in manage_series: %s", e)
    await callback.answer()

@router.callback_query(F.data == "manage_reminders", admin_filter)
async def callback_manage_reminders(callback: CallbackQuery):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "‚è∞ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in manage_reminders: %s", e)
    await callback.answer()

@router.callback_query(F.data == "export_data", admin_filter)
async def callback_export_data(callback: CallbackQuery):
    """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üìä <b>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in export_data: %s", e)
    await callback.answer()

@router.callback_query(F.data == "back_to_main", admin_filter)
async def callback_back_to_main(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üëë <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å CtrlBot</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="create_post")],
                    [InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã", callback_data="view_posts")],
                    [InlineKeyboardButton(text="ü§ñ AI –ø–æ–º–æ—â–Ω–∏–∫", callback_data="ai_functions")],
                    [InlineKeyboardButton(text="üè∑Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏", callback_data="manage_tags")],
                    [InlineKeyboardButton(text="üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏—è–º–∏", callback_data="manage_series")],
                    [InlineKeyboardButton(text="‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="manage_reminders")],
                    [InlineKeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="export_data")],
                    [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞", callback_data="channel_settings")],
                    [InlineKeyboardButton(text="üîó –ü–æ–ª—É—á–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞", callback_data="get_channel_id")]
                ])
            )
    except Exception as e:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
        logger.warning("Failed to edit message in back_to_main: %s", e)
        await safe_callback_answer(callback)

# –ù–æ–≤—ã–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è inline –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
@router.callback_query(F.data == "create_post", admin_filter)
async def callback_create_post(callback: CallbackQuery, state: FSMContext):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞"""
    from utils.states import PostCreationStates
    from utils.keyboards import get_post_actions_keyboard
    
    await state.set_state(PostCreationStates.enter_text)
    try:
        if callback.message:
            await callback.message.edit_text(
                "üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞</b>\n\n"
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown.\n"
                "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å *–∂–∏—Ä–Ω—ã–π*, _–∫—É—Ä—Å–∏–≤_, `–∫–æ–¥` –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã.",
                reply_markup=get_post_actions_keyboard()
            )
    except Exception as e:
        logger.warning("Failed to edit message in create_post: %s", e)
    await callback.answer()

@router.callback_query(F.data == "ai_functions", admin_filter)
async def callback_ai_functions(callback: CallbackQuery):
    """AI —Ñ—É–Ω–∫—Ü–∏–∏"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "ü§ñ <b>AI –ø–æ–º–æ—â–Ω–∏–∫ CtrlBot</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç AI –ø–æ–º–æ—â–Ω–∏–∫ —Å YandexGPT.\n\n"
                "–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                "‚Ä¢ –ü–æ–¥—Å–∫–∞–∑–∫–∏ —Ç–µ–≥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞\n"
                "‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤\n"
                "‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª—è —Ç–µ–∫—Å—Ç–∞\n"
                "‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ –∏ —Å—Ç–∏–ª—è\n"
                "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in ai_functions: %s", e)
    await callback.answer()

@router.callback_query(F.data == "view_posts", admin_filter)
async def callback_view_posts(callback: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–æ–≤"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üìã <b>–ú–æ–∏ –ø–æ—Å—Ç—ã</b>\n\n"
                "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
                "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–æ—Å—Ç–æ–≤.\n\n"
                "–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤\n"
                "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É\n"
                "‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤\n"
                "‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤\n"
                "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in view_posts: %s", e)
    await callback.answer()

@router.callback_query(F.data == "get_channel_id", admin_filter)
async def callback_get_channel_id(callback: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞–Ω–∞–ª–∞"""
    try:
        if callback.message:
            await callback.message.edit_text(
                "üîó <b>–ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞–Ω–∞–ª–∞</b>\n\n"
                "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤:\n\n"
                "1Ô∏è‚É£ <b>–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n"
                "   ‚Ä¢ –ü—Ä–∞–≤–∞: –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                "   ‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
                "2Ô∏è‚É£ <b>–ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –±–æ—Ç—É</b>\n"
                "   ‚Ä¢ –Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—é ID –∫–∞–Ω–∞–ª–∞\n"
                "   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
                "3Ô∏è‚É£ <b>–ì–æ—Ç–æ–≤–æ!</b> –ë–æ—Ç —Å–º–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã\n\n"
                "üí° <i>–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å</i>",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                ])
            )
    except Exception as e:
        logger.warning("Failed to edit message in get_channel_id: %s", e)
    await callback.answer()


