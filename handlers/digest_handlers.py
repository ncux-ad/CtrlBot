"""
@file: handlers/digest_handlers.py
@description: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
@dependencies: utils/keyboards.py, utils/filters.py
@created: 2025-09-13
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext

from utils.keyboards import get_main_menu_keyboard
from utils.filters import IsConfigAdminFilter
from utils.logging import get_logger

logger = get_logger(__name__)
router = Router()

# –§–∏–ª—å—Ç—Ä—ã
admin_filter = IsConfigAdminFilter()

@router.message(Command("digest"), admin_filter)
async def cmd_digest(message: Message):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞–º–∏"""
    try:
        from database import db
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        stats_query = """
            SELECT 
                COUNT(*) as total_posts,
                COUNT(CASE WHEN status = 'published' THEN 1 END) as published_posts,
                COUNT(CASE WHEN status = 'scheduled' THEN 1 END) as scheduled_posts,
                COUNT(CASE WHEN created_at >= NOW() - INTERVAL '7 days' THEN 1 END) as recent_posts
            FROM posts
        """
        stats = await db.fetch_one(stats_query)
        
        text = "üìä *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞–º–∏*\n\n"
        text += f"üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é:*\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats['total_posts']}\n"
        text += f"‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {stats['published_posts']}\n"
        text += f"‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {stats['scheduled_posts']}\n"
        text += f"‚Ä¢ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: {stats['recent_posts']}\n\n"
        
        text += "üîß *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:*\n"
        text += "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤\n"
        text += "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Å—è—á–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤\n"
        text += "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏\n"
        text += "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel\n\n"
        
        text += "üí° *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:*\n"
        text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤"
        
        await message.answer(
            text,
            reply_markup=get_main_menu_keyboard(),
            parse_mode="MarkdownV2"
        )
    except Exception as e:
        logger.error("Error in cmd_digest: %s", e)
        await message.answer(
            "‚ùå *–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏*\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
            reply_markup=get_main_menu_keyboard(),
            parse_mode="MarkdownV2"
        )

@router.message(Command("export"), admin_filter)
async def cmd_export(message: Message):
    """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from services.export import export_service
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        stats = await export_service.get_export_stats()
        
        text = "üìà *–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö*\n\n"
        text += f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats['total_posts']}\n"
        text += f"‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {stats['published_posts']}\n"
        text += f"‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {stats['scheduled_posts']}\n"
        text += f"‚Ä¢ –ß–µ—Ä–Ω–æ–≤–∏–∫–∏: {stats['draft_posts']}\n"
        text += f"‚Ä¢ –û—à–∏–±–∫–∏: {stats['failed_posts']}\n\n"
        
        if stats['channels']:
            text += "üì∫ *–ö–∞–Ω–∞–ª—ã:*\n"
            for channel in stats['channels'][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞–Ω–∞–ª–∞
                text += f"‚Ä¢ {channel['title']}: {channel['posts_count']} –ø–æ—Å—Ç–æ–≤\n"
            if len(stats['channels']) > 3:
                text += f"... –∏ –µ—â–µ {len(stats['channels']) - 3} –∫–∞–Ω–∞–ª–æ–≤\n"
        
        text += "\nüîß *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:*\n"
        text += "‚Ä¢ JSON (.json)\n"
        text += "‚Ä¢ Markdown (.md)\n"
        text += "‚Ä¢ Excel (.xlsx) - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
        text += "‚Ä¢ CSV (.csv) - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
        
        text += "üí° *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:*\n"
        text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö"
        
        await message.answer(
            text,
            reply_markup=get_main_menu_keyboard(),
            parse_mode="MarkdownV2"
        )
    except Exception as e:
        logger.error("Error in cmd_export: %s", e)
        await message.answer(
            "‚ùå *–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏*\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
            reply_markup=get_main_menu_keyboard(),
            parse_mode="MarkdownV2"
        )
