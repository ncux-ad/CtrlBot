"""
@file: handlers/post_deletion_handlers.py
@description: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤
@dependencies: services/post_service.py, services/publisher.py
@created: 2025-09-13
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from services.post_service import post_service
from services.publisher import get_publisher
from utils.filters import IsConfigAdminFilter
from utils.logging import get_logger

logger = get_logger(__name__)
router = Router()

# –§–∏–ª—å—Ç—Ä—ã
admin_filter = IsConfigAdminFilter()

@router.callback_query(F.data.startswith("view_post_"), admin_filter)
async def callback_view_post(callback: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—Ç–µ"""
    try:
        post_id = int(callback.data.split("_")[2])
        logger.info(f"üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–∞ {post_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {callback.from_user.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç –∏–∑ –ë–î
        post = await post_service.get_post(post_id)
        
        if not post:
            await callback.answer("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if post['user_id'] != callback.from_user.id:
            await callback.answer("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞", show_alert=True)
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        status_emoji = {
            'draft': 'üìù',
            'scheduled': '‚è∞',
            'published': '‚úÖ',
            'deleted': '‚ùå',
            'failed': '‚ö†Ô∏è'
        }.get(post['status'], '‚ùì')
        
        text = f"üìã *–î–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞ #{post['id']}*\n\n"
        text += f"üìù *–°—Ç–∞—Ç—É—Å:* {status_emoji} {post['status']}\n"
        text += f"üìÖ *–°–æ–∑–¥–∞–Ω:* {post['created_at'].strftime('%d.%m.%Y %H:%M')}\n"
        
        if post['published_at']:
            text += f"üì§ *–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω:* {post['published_at'].strftime('%d.%m.%Y %H:%M')}\n"
        
        if post['scheduled_at']:
            text += f"‚è∞ *–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞:* {post['scheduled_at'].strftime('%d.%m.%Y %H:%M')}\n"
        
        if post['series_title']:
            text += f"üìö *–°–µ—Ä–∏—è:* {post['series_title']}\n"
        
        if post['tags_cache']:
            tags = ', '.join(post['tags_cache'])
            text += f"üè∑Ô∏è *–¢–µ–≥–∏:* {tags}\n"
        
        if post['media_type']:
            text += f"üì∑ *–ú–µ–¥–∏–∞:* {post['media_type']}\n"
        
        text += f"\nüìù *–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:*\n{post['body_md']}"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = []
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        if post['status'] == 'draft':
            keyboard.append([InlineKeyboardButton(text="üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f"publish_post_{post_id}")])
            keyboard.append([InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_post_{post_id}")])
        elif post['status'] == 'scheduled':
            keyboard.append([InlineKeyboardButton(text="‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f"reschedule_post_{post_id}")])
            keyboard.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_scheduled_post_{post_id}")])
        elif post['status'] == 'published':
            keyboard.append([InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞", callback_data=f"delete_post_{post_id}")])
        
        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –ë–î (–¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –∫—Ä–æ–º–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö)
        if post['status'] != 'deleted':
            keyboard.append([InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞", callback_data=f"permanent_delete_post_{post_id}")])
        
        keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="my_posts")])
        
        await callback.message.edit_text(
            text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –ø–æ—Å—Ç–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞", show_alert=True)

@router.callback_query(F.data.startswith("delete_post_"), admin_filter)
async def callback_delete_post(callback: CallbackQuery):
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –∏–∑ –∫–∞–Ω–∞–ª–∞ (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)"""
    try:
        post_id = int(callback.data.split("_")[2])
        logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ {post_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {callback.from_user.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç –∏–∑ –ë–î
        post = await post_service.get_post(post_id)
        
        if not post:
            await callback.answer("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if post['user_id'] != callback.from_user.id:
            await callback.answer("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —É–¥–∞–ª–∏—Ç—å
        if post['status'] == 'deleted':
            await callback.answer("‚ùå –ü–æ—Å—Ç —É–∂–µ —É–¥–∞–ª–µ–Ω", show_alert=True)
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await callback.message.edit_text(
            f"‚ö†Ô∏è *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è*\n\n"
            f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç #{post_id}?\n\n"
            f"üìù *–¢–µ–∫—Å—Ç:* {post['body_md'][:100]}{'...' if len(post['body_md']) > 100 else ''}\n\n"
            f"*–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:*\n"
            f"‚Ä¢ –ü–æ–º–µ—á–∞–µ—Ç –ø–æ—Å—Ç –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π –≤ –ë–î\n"
            f"‚Ä¢ –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ (–µ—Å–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)\n"
            f"‚Ä¢ –ù–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_post_{post_id}")],
                [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"view_post_{post_id}")]
            ])
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è", show_alert=True)

@router.callback_query(F.data.startswith("confirm_delete_post_"), admin_filter)
async def callback_confirm_delete_post(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞"""
    try:
        post_id = int(callback.data.split("_")[3])
        logger.info(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç –∏–∑ –ë–î
        post = await post_service.get_post(post_id)
        
        if not post:
            await callback.answer("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if post['user_id'] != callback.from_user.id:
            await callback.answer("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞", show_alert=True)
            return
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω
        if post['status'] == 'published' and post['message_id']:
            try:
                publisher = get_publisher()
                await publisher.delete_message_from_channel(post['tg_channel_id'], post['message_id'])
                logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {post['message_id']} —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ {post['tg_channel_id']}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞: {e}")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤ –ë–î –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞
        
        # –ü–æ–º–µ—á–∞–µ–º –ø–æ—Å—Ç –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π –≤ –ë–î
        success = await post_service.delete_post(post_id)
        
        if success:
            await callback.message.edit_text(
                f"‚úÖ *–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!*\n\n"
                f"üìù *ID –ø–æ—Å—Ç–∞:* {post_id}\n"
                f"üìù *–¢–µ–∫—Å—Ç:* {post['body_md'][:100]}{'...' if len(post['body_md']) > 100 else ''}\n\n"
                f"–ü–æ—Å—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã", callback_data="my_posts")],
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="main_menu")]
                ])
            )
            logger.info(f"‚úÖ –ü–æ—Å—Ç {post_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        else:
            await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç", show_alert=True)
        
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞", show_alert=True)

@router.callback_query(F.data.startswith("permanent_delete_post_"), admin_filter)
async def callback_permanent_delete_post(callback: CallbackQuery):
    """–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –∏–∑ –ë–î"""
    try:
        post_id = int(callback.data.split("_")[3])
        logger.info(f"üóëÔ∏è –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ {post_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç –∏–∑ –ë–î
        post = await post_service.get_post(post_id)
        
        if not post:
            await callback.answer("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if post['user_id'] != callback.from_user.id:
            await callback.answer("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞", show_alert=True)
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        await callback.message.edit_text(
            f"‚ö†Ô∏è *–û–°–¢–û–†–û–ñ–ù–û! –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ*\n\n"
            f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ù–ê–í–°–ï–ì–î–ê —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç #{post_id}?\n\n"
            f"üìù *–¢–µ–∫—Å—Ç:* {post['body_md'][:100]}{'...' if len(post['body_md']) > 100 else ''}\n\n"
            f"*–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:*\n"
            f"‚Ä¢ –£–¥–∞–ª—è–µ—Ç –ø–æ—Å—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n"
            f"‚Ä¢ –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ (–µ—Å–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω)\n"
            f"‚Ä¢ –ù–ï–õ–¨–ó–Ø –û–¢–ú–ï–ù–ò–¢–¨!\n"
            f"‚Ä¢ –ü–æ—Ç–µ—Ä—è–µ—Ç—Å—è –≤—Å—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ—Å—Ç–∞",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üíÄ –£–î–ê–õ–ò–¢–¨ –ù–ê–í–°–ï–ì–î–ê", callback_data=f"confirm_permanent_delete_{post_id}")],
                [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"view_post_{post_id}")]
            ])
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è", show_alert=True)

@router.callback_query(F.data.startswith("confirm_permanent_delete_"), admin_filter)
async def callback_confirm_permanent_delete(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞"""
    try:
        post_id = int(callback.data.split("_")[3])
        logger.info(f"üíÄ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç –∏–∑ –ë–î
        post = await post_service.get_post(post_id)
        
        if not post:
            await callback.answer("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        if post['user_id'] != callback.from_user.id:
            await callback.answer("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞", show_alert=True)
            return
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω
        if post['status'] == 'published' and post['message_id']:
            try:
                publisher = get_publisher()
                await publisher.delete_message_from_channel(post['tg_channel_id'], post['message_id'])
                logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {post['message_id']} —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ {post['tg_channel_id']}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞: {e}")
        
        # –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç –∏–∑ –ë–î (–ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)
        # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –ë–î
        success = await post_service.delete_post(post_id)
        
        if success:
            await callback.message.edit_text(
                f"üíÄ *–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞!*\n\n"
                f"üìù *ID –ø–æ—Å—Ç–∞:* {post_id}\n"
                f"üìù *–¢–µ–∫—Å—Ç:* {post['body_md'][:100]}{'...' if len(post['body_md']) > 100 else ''}\n\n"
                f"–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–∞–Ω–∞–ª–∞.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ—Å—Ç—ã", callback_data="my_posts")],
                    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="main_menu")]
                ])
            )
            logger.info(f"üíÄ –ü–æ—Å—Ç {post_id} —É–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞")
        else:
            await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç", show_alert=True)
        
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞", show_alert=True)
