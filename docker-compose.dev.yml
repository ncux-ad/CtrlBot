version: '3.8'

services:
  ctrlbot:
    build: .
    container_name: ctrlbot_dev
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_IDS=${ADMIN_IDS}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-ctrlbot_db}
      - DB_USER=${DB_USER:-ctrlbot}
      - DB_PASSWORD=${DB_PASSWORD}
      - YANDEX_API_KEY=${YANDEX_API_KEY}
      - YANDEX_FOLDER_ID=${YANDEX_FOLDER_ID}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - TIMEZONE=${TIMEZONE:-Europe/Moscow}
      - MAX_POST_LENGTH=${MAX_POST_LENGTH:-4096}
      - MIN_TAGS_REQUIRED=${MIN_TAGS_REQUIRED:-1}
    volumes:
      # Hot-reload: монтируем код в контейнер
      - .:/app
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ctrlbot-network
    # Переопределяем команду для hot-reload
    command: python hot_reload.py

  postgres:
    image: postgres:15-alpine
    container_name: ctrlbot_postgres_dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-ctrlbot_db}
      - POSTGRES_USER=${DB_USER:-ctrlbot}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./deploy/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-ctrlbot} -d ${DB_NAME:-ctrlbot_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ctrlbot-network

volumes:
  postgres_data_dev:

networks:
  ctrlbot-network:
    driver: bridge
